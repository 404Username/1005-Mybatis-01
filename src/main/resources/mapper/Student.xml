<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--该文件用于进行数据库表中某个表的操作声明 想到与dao层中的实现类 例如以前写的studentDaoImpl
里面定义一些列操作 数据库表的sql语句
namespace 声明该操作 文件对外提供的接口类路径是谁 相当于-->
        <mapper namespace="com.ssm.mapper.StudentMapper">
    <!--select查询标签 执行 查询语句 常用属性
        id 唯一标识该操作 的名称 对应接口(StudentDao)中的某个方法名
        parameterType (parameterMap)定义sql语句中需要的参数 及条件查询的参数 对应接口中犯法的惨呼列表注意
        接口中的参数只能有一个 对于多个参数可以封装到pojo类中

        resultType (resultMap) 返回结果声明 对应一个map以key,value的形式存储返回的数据
        -->
    <select id="selectAll" resultType="com.ssm.damain.Student" >
        SELECT * FROM Student
    </select>
    <!--分页查询
    在mapper文件 中用#{属性名}的方式取传递过来的参数值  如果传递过来的参数是一个基本类型者可以用 #{value}获取

    -->
    <select id="pageSelect" resultType="com.ssm.damain.Student"
            parameterType="com.ssm.page.PageBean">
        SELECT * FROM student
        WHERE sname LIKE '%${parameter.sname}%'
        limit #{startIndex},#{pageSize}
    </select>
    <!--获取学生表总条数-->
   <select id="getTotalRecord" resultType="java.lang.Integer" parameterType="com.ssm.page.PageBean">
       SELECT COUNT(sid) FROM student
       WHERE sname LIKE '%${parameter.sname}%'
   </select>

</mapper>